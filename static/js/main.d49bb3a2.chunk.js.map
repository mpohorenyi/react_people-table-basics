{"version":3,"sources":["App.tsx","pages/HomePage.tsx","api.ts","helpers/preparePeople.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleRow.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleRow","born","died","fatherName","motherName","father","mother","useParams","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","isError","loadingState","setLoadingState","useEffect","peopleFromServer","find","preparePeople","catch","prev","finally","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d49bb3a2.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './App.scss';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const preparePeople = (peopleFromServer: Person[]): Person[] => {\n  return peopleFromServer.map((person) => ({\n    ...person,\n    mother: peopleFromServer.find(mother => mother.name === person.motherName),\n    father: peopleFromServer.find(father => father.name === person.fatherName),\n  }));\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleRow: React.FC<Props> = ({ person }) => {\n  const {\n    sex, born, died, fatherName, motherName, father, mother,\n  } = person;\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PeopleRow } from './PeopleRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleRow\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { getPeople } from '../api';\nimport { preparePeople } from '../helpers/preparePeople';\nimport { Person } from '../types';\n\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\n\ninterface LoadingState {\n  isLoading: boolean,\n  isError: boolean,\n}\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingState, setLoadingState] = useState<LoadingState>({\n    isLoading: false,\n    isError: false,\n  });\n\n  const { isLoading, isError } = loadingState;\n\n  useEffect(() => {\n    setLoadingState({ isLoading: true, isError: false });\n    getPeople()\n      .then(peopleFromServer => setPeople(preparePeople(peopleFromServer)))\n      .catch(() => setLoadingState(prev => ({ ...prev, isError: true })))\n      .finally(() => setLoadingState(prev => ({ ...prev, isLoading: false })));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {(isError && !isLoading) && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!!people.length && !isLoading) && (\n            <PeopleTable\n              people={people}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}